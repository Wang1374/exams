import { ColorHSL, ColorHSV, ColorRGB, ColorRGBA } from '@tanbo/color';
export interface PickerOptions {
    colors?: string[];
    value?: string;
    btnText?: string;
}
export declare class Picker {
    onChange: (event: this) => void;
    onSelected: (event: this) => void;
    readonly host: HTMLDivElement;
    set hex(color: string);
    get hex(): string;
    set hsl(color: ColorHSL);
    get hsl(): ColorHSL;
    set rgb(color: ColorRGB);
    get rgb(): ColorRGB;
    set rgba(color: ColorRGBA);
    get rgba(): ColorRGBA;
    set hsv(color: ColorHSV);
    get hsv(): ColorHSV;
    private _hex;
    private _hsl;
    private _rgb;
    private _hsv;
    private _rgba;
    private empty;
    private resetAlpha;
    private container;
    private valueViewer;
    private palette;
    private palettePoint;
    private hueBar;
    private huePoint;
    private checkBtn;
    private alphaBar;
    private alphaValue;
    private alphaPoint;
    private inputsWrap;
    private hslInputs;
    private rgbInputs;
    private hexInput;
    private writing;
    private recentColorOptions;
    private colorOptionGroup;
    constructor(selector: string | HTMLElement, options?: PickerOptions);
    addRecentColor(color: string): void;
    private render;
    private bindingEvents;
    private bindAlphaEvent;
    private bindPaletteEvent;
    private bindHueBarEvent;
    private bindInputsEvent;
    private bindSelectedEvent;
    private bindColorOptionsEvent;
    private change;
}
