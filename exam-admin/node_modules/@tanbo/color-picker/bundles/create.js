var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { Picker } from './lib/picker';
export function createPicker(selector, options) {
    if (options === void 0) { options = {}; }
    return new Picker(selector, __assign({ colors: ['#f8f8f9', '#e9eaec', '#dddee1', '#bbbec4', '#80848f', '#495060', '#1c2838', '#e74f5e', '#ff9900', '#15bd9a', '#6ad1ec', '#1296db'] }, options));
}
//# sourceMappingURL=create.js.map