(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./stringify"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.madeProvideScopeError = exports.makeInjectError = void 0;
    var stringify_1 = require("./stringify");
    function makeInjectError(name) {
        return function injectError(token) {
            var error = new Error("No provide for `" + stringify_1.stringify(token) + "`!");
            error.name = name;
            return error;
        };
    }
    exports.makeInjectError = makeInjectError;
    function madeProvideScopeError(name) {
        return function provideError(token) {
            var error = new Error("Can not found provide scope `" + stringify_1.stringify(token) + "`!");
            error.name = name;
            return error;
        };
    }
    exports.madeProvideScopeError = madeProvideScopeError;
});
