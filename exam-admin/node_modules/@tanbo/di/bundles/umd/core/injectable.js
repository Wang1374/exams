(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./decorators"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Injectable = exports.Scope = void 0;
    var decorators_1 = require("./decorators");
    var Scope = /** @class */ (function () {
        function Scope(name) {
            this.name = name;
        }
        Scope.prototype.toString = function () {
            return this.name || '[anonymous provide scope]';
        };
        return Scope;
    }());
    exports.Scope = Scope;
    /**
     * 可注入类的装饰器
     */
    exports.Injectable = function InjectableDecorator(options) {
        if (this instanceof InjectableDecorator) {
            this.provideIn = (options === null || options === void 0 ? void 0 : options.provideIn) || null;
        }
        else {
            return decorators_1.makeClassDecorator(exports.Injectable, new exports.Injectable(options));
        }
    };
});
