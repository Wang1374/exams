(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.forwardRef = exports.ForwardRef = void 0;
    var ForwardRef = /** @class */ (function () {
        function ForwardRef(forwardRefFn) {
            this.forwardRefFn = forwardRefFn;
        }
        ForwardRef.prototype.getRef = function () {
            return this.forwardRefFn();
        };
        return ForwardRef;
    }());
    exports.ForwardRef = ForwardRef;
    /**
     * 引用后声明的类的工具函数
     * @param fn
     */
    function forwardRef(fn) {
        return new ForwardRef(fn);
    }
    exports.forwardRef = forwardRef;
});
