{"remainingRequest":"G:\\exams\\exam-admin\\node_modules\\thread-loader\\dist\\cjs.js!G:\\exams\\exam-admin\\node_modules\\babel-loader\\lib\\index.js!G:\\exams\\exam-admin\\src\\utils\\request.js","dependencies":[{"path":"G:\\exams\\exam-admin\\src\\utils\\request.js","mtime":1637309623098},{"path":"G:\\exams\\exam-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\exams\\exam-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\exams\\exam-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAiQC9yb3V0ZXIiOwppbXBvcnQgeyBFbE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXBsdXMnOwp2YXIgcmVxdWVzdCA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogIi9hcGkiLAogIC8v5YWo5bGA6K6+572uL2FwaQogIHRpbWVvdXQ6IDUwMDAKfSk7IC8vIHJlcXVlc3Qg5oum5oiq5ZmoCi8vIOWPr+S7peiHquivt+axguWPkemAgeWJjeWvueivt+axguWBmuS4gOS6m+WkhOeQhgovLyDmr5TlpoLnu5/kuIDliqB0b2tlbu+8jOWvueivt+axguWPguaVsOe7n+S4gOWKoOWvhgoKcmVxdWVzdC5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIGNvbmZpZy5oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnOyAvL+WIpOaWreaYr+WQpuWtmOWcqHRva2Vu77yM5aaC5p6c5a2Y5Zyo5bCG5q+P5Liq6aG16Z2iaGVhZGVy6YO95re75YqgdG9rZW4KCiAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpKSB7CiAgICBjb25maWcuaGVhZGVyc1sndG9rZW4nXSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpOwogIH0gLy/liKTmlq3mmK/lkKblrZjlnKjmiYvmnLrlj7fvvIzlpoLmnpzlrZjlnKjlsIbmr4/kuKrpobXpnaJoZWFkZXLpg73mt7vliqDmiYvmnLrlj7cKCgogIGlmIChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJwaG9uZSIpKSB7CiAgICBjb25maWcuaGVhZGVyc1sncGhvbmUnXSA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oInBob25lIik7CiAgfQoKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsgLy8gcmVzcG9uc2Ug5oum5oiq5ZmoCi8vIOWPr+S7peWcqOaOpeWPo+WTjeW6lOWQjue7n+S4gOWkhOeQhue7k+aenAoKcmVxdWVzdC5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOyAvLyDlpoLmnpzmmK/ov5Tlm57nmoTmlofku7YKCiAgaWYgKHJlc3BvbnNlLmNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICdibG9iJykgewogICAgcmV0dXJuIHJlczsKICB9IC8vIOWFvOWuueacjeWKoeerr+i/lOWbnueahOWtl+espuS4suaVsOaNrgoKCiAgaWYgKHR5cGVvZiByZXMgPT09ICdzdHJpbmcnKSB7CiAgICByZXMgPSByZXMgPyBKU09OLnBhcnNlKHJlcykgOiByZXM7CiAgfQoKICByZXR1cm4gcmVzOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygnZXJyJyArIGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCByZXF1ZXN0Ow=="},{"version":3,"sources":["G:/exams/exam-admin/src/utils/request.js"],"names":["axios","router","ElMessage","request","create","baseURL","timeout","interceptors","use","config","headers","localStorage","getItem","sessionStorage","error","Promise","reject","response","res","data","responseType","JSON","parse","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SACIC,SADJ,QAEO,cAFP;AAGA,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,MADgB;AACR;AACjBC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvCA,EAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC,CADuC,CAGvC;;AACA,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/BH,IAAAA,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA1B;AACH,GANsC,CAQvC;;;AACA,MAAIC,cAAc,CAACD,OAAf,CAAuB,OAAvB,CAAJ,EAAqC;AACjCH,IAAAA,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BG,cAAc,CAACD,OAAf,CAAuB,OAAvB,CAA1B;AACH;;AAED,SAAOH,MAAP;AACH,CAdD,EAcG,UAAAK,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAhBD,E,CAkBA;AACA;;AACAX,OAAO,CAACI,YAAR,CAAqBU,QAArB,CAA8BT,GAA9B,CACI,UAAAS,QAAQ,EAAI;AACR,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;AACA,MAAIF,QAAQ,CAACR,MAAT,CAAgBW,YAAhB,KAAiC,MAArC,EAA6C;AACzC,WAAOF,GAAP;AACH,GALO,CAMR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAH,GAAqBA,GAA9B;AACH;;AACD,SAAOA,GAAP;AACH,CAZL,EAaI,UAAAJ,KAAK,EAAI;AACLS,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQV,KAApB,EADK,CACsB;;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAhBL;AAoBA,eAAeX,OAAf","sourcesContent":["import axios from 'axios'\nimport router from \"@/router\"\nimport {\n    ElMessage\n} from 'element-plus'\nconst request = axios.create({\n    baseURL: \"/api\", //全局设置/api\n    timeout: 5000\n})\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n    //判断是否存在token，如果存在将每个页面header都添加token\n    if (localStorage.getItem(\"token\")) {\n        config.headers['token'] = localStorage.getItem(\"token\")\n    }\n\n    //判断是否存在手机号，如果存在将每个页面header都添加手机号\n    if (sessionStorage.getItem(\"phone\")) {\n        config.headers['phone'] = sessionStorage.getItem(\"phone\")\n    }\n\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        let res = response.data;\n        // 如果是返回的文件\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        return res;\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n\nexport default request"]}]}