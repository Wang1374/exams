{"remainingRequest":"/Users/sw/Documents/examSystem/exams/exam-admin/node_modules/babel-loader/lib/index.js!/Users/sw/Documents/examSystem/exams/exam-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sw/Documents/examSystem/exams/exam-admin/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/sw/Documents/examSystem/exams/exam-admin/src/components/verifition/Verify/VerifyPoints.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/sw/Documents/examSystem/exams/exam-admin/src/components/verifition/Verify/VerifyPoints.vue","mtime":1636551969000},{"path":"/Users/sw/Documents/examSystem/exams/exam-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sw/Documents/examSystem/exams/exam-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sw/Documents/examSystem/exams/exam-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sw/Documents/examSystem/exams/exam-admin/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sw/Documents/examSystem/exams/exam-admin/src/components/verifition/Verify/VerifyPoints.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"position: relative\"\n        >\n        <div class=\"verify-img-out\">\n            <div class=\"verify-img-panel\" :style=\"{'width': setSize.imgWidth,\n                                                   'height': setSize.imgHeight,\n                                                   'background-size' : setSize.imgWidth + ' '+ setSize.imgHeight,\n                                                   'margin-bottom': vSpace + 'px'}\"\n                                                    >\n                <div class=\"verify-refresh\" style=\"z-index:3\" @click=\"refresh\" v-show=\"showRefresh\">\n                    <i class=\"iconfont icon-refresh\"></i>\n                </div>\n                <img :src=\"'data:image/png;base64,'+pointBackImgBase\" \n                ref=\"canvas\"\n                alt=\"\"  style=\"width:100%;height:100%;display:block\"\n                @click=\"bindingClick?canvasClick($event):undefined\">\n\n                <div v-for=\"(tempPoint, index) in tempPoints\" :key=\"index\" class=\"point-area\"\n                     :style=\"{\n                        'background-color':'#1abd6c',\n                        color:'#fff',\n                        'z-index':9999,\n                        width:'20px',\n                        height:'20px',\n                        'text-align':'center',\n                        'line-height':'20px',\n                        'border-radius': '50%',\n                        position:'absolute',\n                        top:parseInt(tempPoint.y-10) + 'px',\n                        left:parseInt(tempPoint.x-10) + 'px'\n                     }\">\n                    {{index + 1}}\n                </div>\n            </div>\n        </div>\n        <!-- 'height': this.barSize.height, -->\n        <div class=\"verify-bar-area\"\n             :style=\"{'width': setSize.imgWidth,\n                      'color': this.barAreaColor,\n                      'border-color': this.barAreaBorderColor,\n                      'line-height':this.barSize.height}\">\n            <span class=\"verify-msg\">{{text}}</span>\n        </div>\n    </div>\n</template>\n<script type=\"text/babel\">\n    /**\n     * VerifyPoints\n     * @description 点选\n     * */\n    import {resetSize, _code_chars, _code_color1, _code_color2} from './../utils/util'\n    import {aesEncrypt} from \"./../utils/ase\"\n    import {reqGet,reqCheck}  from \"./../api/index\"\n    import { computed, onMounted, reactive, ref,watch,nextTick,toRefs, watchEffect,getCurrentInstance} from 'vue';\n    export default {\n        name: 'VerifyPoints',\n        props: {\n            //弹出式pop，固定fixed\n            mode: {\n                type: String,\n                default: 'fixed'\n            },\n            captchaType:{\n                type:String,\n            },\n            //间隔\n            vSpace: {\n                type: Number,\n                default: 5\n            },\n            imgSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '310px',\n                        height: '155px'\n                    }\n                }\n            },\n            barSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '310px',\n                        height: '40px'\n                    }\n                }\n            }\n        },\n        setup(props,context){\n            const {mode,captchaType,vSpace,imgSize,barSize} = toRefs(props)\n            const { proxy } = getCurrentInstance();\n            let secretKey = ref(''),           //后端返回的ase加密秘钥\n                checkNum = ref(3),             //默认需要点击的字数\n                fontPos = reactive([]),            //选中的坐标信息\n                checkPosArr = reactive([]),        //用户点击的坐标\n                num = ref(1),                 //点击的记数\n                pointBackImgBase = ref(''),    //后端获取到的背景图片\n                poinTextList = reactive([]),        //后端返回的点击字体顺序\n                backToken = ref(''),           //后端返回的token值\n                setSize = reactive({\n                    imgHeight: 0,\n                    imgWidth: 0,\n                    barHeight: 0,\n                    barWidth: 0\n                }),\n                tempPoints = reactive([]),\n                text = ref(''),\n                barAreaColor = ref(undefined),\n                barAreaBorderColor = ref(undefined),\n                showRefresh = ref(true),\n                bindingClick = ref(true)\n\n                \n               \n\n                const init = ()=>{\n                    //加载页面\n                    fontPos.splice(0, fontPos.length)\n                    checkPosArr.splice(0, checkPosArr.length)\n                    num.value = 1\n                    getPictrue();\n                    nextTick(() => {\n                        let {imgHeight,imgWidth,barHeight,barWidth} = resetSize(proxy)\n                        setSize.imgHeight = imgHeight\n                        setSize.imgWidth = imgWidth\n                        setSize.barHeight = barHeight\n                        setSize.barWidth = barWidth\n                        proxy.$parent.$emit('ready', proxy)\n                    })\n                }\n                 onMounted(()=>{\n                    // 禁止拖拽\n                    init()\n                    proxy.$el.onselectstart = function () {\n                        return false\n                    }\n                })\n                const canvas = ref(null)\n                const canvasClick = (e)=>{\n                    checkPosArr.push(getMousePos(canvas, e));\n                    if (num.value == checkNum.value) {\n                        num.value = createPoint(getMousePos(canvas, e));\n                        //按比例转换坐标值\n                        let arr = pointTransfrom(checkPosArr,setSize)\n                        checkPosArr.length = 0\n                        checkPosArr.push(...arr);\n                        //等创建坐标执行完\n                        setTimeout(() => {\n                            // var flag = this.comparePos(this.fontPos, this.checkPosArr);\n                            //发送后端请求\n                            var captchaVerification = secretKey.value? aesEncrypt(backToken.value+'---'+JSON.stringify(checkPosArr),secretKey.value):backToken.value+'---'+JSON.stringify(checkPosArr)\n                            let data = {\n                                captchaType:captchaType.value,\n                                \"pointJson\":secretKey.value? aesEncrypt(JSON.stringify(checkPosArr),secretKey.value):JSON.stringify(checkPosArr),\n                                \"token\":backToken.value\n                            }\n                            reqCheck(data).then(res=>{\n                                if (res.repCode == \"0000\") {\n                                    barAreaColor.value = '#4cae4c'\n                                    barAreaBorderColor.value = '#5cb85c'\n                                    text.value = '验证成功'\n                                    bindingClick.value = false\n                                    if (mode.value=='pop') {\n                                        setTimeout(()=>{\n                                            proxy.$parent.clickShow = false;\n                                            refresh();\n                                        },1500)\n                                    }\n                                    proxy.$parent.$emit('success', {captchaVerification})\n                                }else{\n                                    proxy.$parent.$emit('error', proxy)\n                                    barAreaColor.value = '#d9534f'\n                                    barAreaBorderColor.value = '#d9534f'\n                                    text.value = '验证失败'\n                                    setTimeout(() => {\n                                        refresh();\n                                    }, 700);\n                                }\n                            })\n                        }, 400);\n                    }\n                    if (num.value < checkNum.value) {\n                        num.value = createPoint(getMousePos(canvas, e));\n                    }\n                }\n                 //获取坐标\n                const getMousePos = function (obj, e) {\n                    var x = e.offsetX \n                    var y = e.offsetY \n                    return {x, y}\n                }\n                //创建坐标点\n                const createPoint = function (pos) {\n                    tempPoints.push(Object.assign({}, pos))\n                    return num.value+1;\n                }\n                const refresh = function () {\n                    tempPoints.splice(0, tempPoints.length)\n                    barAreaColor.value = '#000'\n                    barAreaBorderColor.value = '#ddd'\n                    bindingClick.value = true\n                    fontPos.splice(0, fontPos.length)\n                    checkPosArr.splice(0, checkPosArr.length)\n                    num.value = 1\n                    getPictrue();\n                    text.value = '验证失败'\n                    showRefresh.value = true\n                }\n\n                // 请求背景图片和验证图片\n                function getPictrue() {\n                    let data = {\n                        captchaType:captchaType.value\n                    }\n                    reqGet(data).then(res=>{\n                        if (res.repCode == \"0000\") {\n                            pointBackImgBase.value = res.repData.originalImageBase64\n                            backToken.value = res.repData.token\n                            secretKey.value = res.repData.secretKey\n                            poinTextList.value = res.repData.wordList\n                            text.value = '请依次点击【' + poinTextList.value.join(\",\") + '】'\n                        }else{\n                            text.value = res.repMsg;\n                        }\n                    })\n                }\n                //坐标转换函数\n                const pointTransfrom = function(pointArr,imgSize){\n                    var newPointArr = pointArr.map(p=>{\n                        let x = Math.round(310 * p.x/parseInt(imgSize.imgWidth)) \n                        let y =Math.round(155 * p.y/parseInt(imgSize.imgHeight)) \n                        return {x,y}\n                    })\n                    return newPointArr\n                }\n                return {\n                    secretKey,\n                    checkNum,\n                    fontPos,\n                    checkPosArr,\n                    num,\n                    pointBackImgBase,\n                    poinTextList,\n                    backToken,\n                    setSize,\n                    tempPoints,\n                    text,\n                    barAreaColor,\n                    barAreaBorderColor,\n                    showRefresh,\n                    bindingClick,\n                    init,\n                    canvas,\n                    canvasClick,\n                    getMousePos,createPoint,refresh,getPictrue,pointTransfrom\n                }\n        },\n    }\n</script>"],"sourceRoot":""}]}