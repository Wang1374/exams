import { InlineFormatter, VElement, FormatterPriority } from '@textbus/core';
export class LinkFormatter extends InlineFormatter {
    constructor() {
        super({
            tags: ['a']
        }, FormatterPriority.InlineTag);
        this.link = document.createElement('a');
    }
    read(node) {
        const data = this.extractData(node, {
            tag: true,
            attrs: ['target', 'href', 'data-href']
        });
        if (data.attrs.get('href')) {
            data.attrs.delete('data-href');
        }
        return data;
    }
    render(context) {
        const el = new VElement('a');
        const target = context.formatData.attrs.get('target');
        const href = context.formatData.attrs.get('href') || context.formatData.attrs.get('data-href');
        target && el.attrs.set('target', target);
        this.link.href = href;
        if (href && this.link.hostname) {
            el.attrs.set(context.isOutputMode ? 'href' : 'data-href', href);
        }
        return el;
    }
}
export const linkFormatter = new LinkFormatter();
//# sourceMappingURL=link.formatter.js.map