import { InlineFormatter, VElement, FormatterPriority } from '@textbus/core';
export class VerticalAlignFormatter extends InlineFormatter {
    constructor() {
        super({
            styles: {
                verticalAlign: /.+/
            }
        }, FormatterPriority.InlineStyle);
    }
    read(node) {
        return this.extractData(node, {
            styleName: 'verticalAlign'
        });
    }
    render(context, existingElement) {
        if (existingElement && /^(span|em|i|s|del|sup|sub|u|strong|img)$/i.test(existingElement.tagName)) {
            existingElement.styles.set('verticalAlign', context.formatData.styles.get('verticalAlign'));
            return null;
        }
        existingElement = new VElement('span');
        existingElement.styles.set('verticalAlign', context.formatData.styles.get('verticalAlign'));
        return existingElement;
    }
}
export const verticalAlignFormatter = new VerticalAlignFormatter();
//# sourceMappingURL=vertical-align.formatter.js.map