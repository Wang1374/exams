import { VideoComponent } from '@textbus/components';
export class VideoCommander {
    constructor() {
        this.recordHistory = true;
    }
    command(context, attrs) {
        const { selection, overlap } = context;
        const fn = function (component) {
            component.src = attrs.get('src');
            component.autoplay = attrs.get('autoplay');
            component.controls = attrs.get('controls');
            component.width = attrs.get('width');
            component.height = attrs.get('height');
        };
        selection.ranges.forEach(range => {
            if (range.collapsed) {
                if (overlap) {
                    const component = range.commonAncestorFragment.getContentAtIndex(range.startIndex);
                    if (component instanceof VideoComponent) {
                        fn(component);
                    }
                }
                else {
                    range.commonAncestorFragment.insert(new VideoComponent(attrs.get('src'), !!attrs.get('autoplay'), !!attrs.get('controls'), {
                        width: attrs.get('width'),
                        height: attrs.get('height')
                    }), range.startIndex);
                }
            }
            else {
                range.getSelectedScope().forEach(scope => {
                    scope.fragment.sliceContents(scope.startIndex, scope.endIndex).forEach(component => {
                        if (component instanceof VideoComponent) {
                            fn(component);
                        }
                    });
                });
            }
        });
    }
}
//# sourceMappingURL=video.commander.js.map