import { RootComponent } from '@textbus/core';
import { TableComponent } from '@textbus/components';
export class TableRemoveCommander {
    constructor() {
        this.recordHistory = true;
    }
    setup(injector) {
        this.rootFragment = injector.get(RootComponent).slot;
    }
    command(c) {
        const { selection } = c;
        this.recordHistory = true;
        const firstRange = selection.firstRange;
        const context = firstRange.startFragment.getContext(TableComponent);
        if (context) {
            let position = firstRange.findFirstPosition(context.getSlotAtIndex(0));
            firstRange.setStart(position.fragment, position.index);
            firstRange.collapse();
            const p = firstRange.getPreviousPosition();
            const flag = p.fragment === position.fragment;
            const parentFragment = context.parentFragment;
            const index = parentFragment.indexOf(context);
            parentFragment.remove(index, index + 1);
            if (flag) {
                position = firstRange.findFirstPosition(this.rootFragment);
            }
            else {
                position = p;
            }
            firstRange.setStart(position.fragment, position.index);
            firstRange.collapse();
        }
        else {
            this.recordHistory = false;
        }
    }
}
//# sourceMappingURL=table-remove.commander.js.map