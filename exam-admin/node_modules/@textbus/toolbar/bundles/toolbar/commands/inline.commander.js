import { FormatEffect, FormatData } from '@textbus/core';
export class InlineCommander {
    constructor(tagName, formatter) {
        this.tagName = tagName;
        this.formatter = formatter;
        this.recordHistory = true;
    }
    command(context) {
        this.recordHistory = !context.selection.collapsed;
        if (!this.recordHistory) {
            return;
        }
        context.selection.ranges.forEach(range => {
            range.getSelectedScope().forEach(item => {
                item.fragment.apply(this.formatter, {
                    effect: context.overlap ? FormatEffect.Invalid : FormatEffect.Valid,
                    startIndex: item.startIndex,
                    endIndex: item.endIndex,
                    formatData: new FormatData({
                        tag: this.tagName
                    })
                });
            });
        });
    }
}
//# sourceMappingURL=inline.commander.js.map