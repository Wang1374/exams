import { FormatData, FormatEffect, } from '@textbus/core';
export class StyleCommander {
    constructor(name, formatter) {
        this.name = name;
        this.formatter = formatter;
        this.recordHistory = true;
    }
    command(context, value) {
        const { selection } = context;
        this.recordHistory = !selection.collapsed;
        if (!this.recordHistory) {
            return;
        }
        selection.ranges.forEach(range => {
            range.getSelectedScope().forEach(item => {
                item.fragment.apply(this.formatter, {
                    effect: value ? FormatEffect.Valid : FormatEffect.Invalid,
                    startIndex: item.startIndex,
                    endIndex: item.endIndex,
                    formatData: new FormatData({
                        styles: {
                            [this.name]: value
                        }
                    })
                });
            });
        });
    }
}
//# sourceMappingURL=style.commander.js.map