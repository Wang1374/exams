import { ImageComponent } from '@textbus/components';
export class ImageCommander {
    constructor() {
        this.recordHistory = true;
    }
    command(context, attrs) {
        const size = attrs.get('size');
        const maxSize = attrs.get('maxSize');
        const fn = function (component) {
            component.src = attrs.get('src');
            component.width = size.width || '';
            component.height = size.height || '';
            component.maxWidth = maxSize.width || '';
            component.maxHeight = maxSize.height || '';
            component.float = attrs.get('float');
            component.margin = attrs.get('margin');
            component.markAsDirtied();
        };
        context.selection.ranges.forEach(range => {
            if (range.collapsed) {
                if (context.overlap) {
                    const component = range.commonAncestorFragment.getContentAtIndex(range.startIndex);
                    if (component instanceof ImageComponent) {
                        fn(component);
                    }
                }
                else {
                    range.commonAncestorFragment.insert(new ImageComponent(attrs.get('src'), {
                        width: size.width || '',
                        height: size.height || '',
                        maxWidth: maxSize.width || '',
                        maxHeight: maxSize.height || '',
                        float: attrs.get('float'),
                        margin: attrs.get('margin')
                    }), range.startIndex);
                }
            }
            else {
                range.getSelectedScope().forEach(scope => {
                    scope.fragment.sliceContents(scope.startIndex, scope.endIndex).forEach(component => {
                        if (component instanceof ImageComponent) {
                            fn(component);
                        }
                    });
                });
            }
        });
    }
}
//# sourceMappingURL=image.commander.js.map