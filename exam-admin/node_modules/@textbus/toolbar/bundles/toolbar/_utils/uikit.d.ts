import { Keymap } from '@textbus/core';
export interface UIButtonParams {
    classes?: string[];
    iconClasses?: string[];
    label?: string;
    canExpand?: boolean;
    tooltip?: string;
    onChecked?(): any;
}
export interface UIButton {
    label: HTMLElement;
    elementRef: HTMLButtonElement;
    disabled: boolean;
    highlight: boolean;
}
export interface UIDropdownParams {
    button: UIButtonParams;
    menu: HTMLElement | DocumentFragment;
    stickyElement: HTMLElement;
}
export interface UIDropdown {
    elementRef: HTMLElement;
    button: UIButton;
    highlight: boolean;
    disabled: boolean;
    hide(): void;
    show(): void;
}
export interface UISelectOption {
    value: any;
    label?: string;
    classes?: string[];
    iconClasses?: string[];
    default?: boolean;
    keymap?: Keymap;
}
export interface UISelectParams {
    stickyElement: HTMLElement;
    options: UISelectOption[];
    classes?: string[];
    iconClasses?: string[];
    tooltip?: string;
    mini?: boolean;
    onSelected?(value: any): any;
}
export interface UIActionParams {
    iconClasses?: string[];
    classes?: string[];
    label?: string;
    keymap?: Keymap;
    onChecked(): any;
}
export interface UIActionSheetParams {
    label?: string;
    classes?: string[];
    iconClasses?: string[];
    tooltip?: string;
    items: UIActionParams[];
    stickyElement: HTMLElement;
}
export interface UIMenuParams {
    label?: string;
    iconClasses?: string[];
    classes?: string[];
    tooltip?: string;
    menu: Array<HTMLElement>;
    stickyElement: HTMLElement;
}
export interface UIMenuItemParams {
    label?: string;
    iconClasses?: string[];
    classes?: string[];
    keymap?: Keymap;
    onChecked?(): any;
}
export interface UIMenuItem {
    elementRef: HTMLElement;
    highlight: boolean;
    disabled: boolean;
}
export interface UIMenuSelectParams {
    stickyElement: HTMLElement;
    iconClasses?: string[];
    classes?: string[];
    label?: string;
    tooltip?: string;
    options: UISelectOption[];
    onSelected?(value: any): any;
}
export interface UIMenuActionSheetParams {
    stickyElement: HTMLElement;
    iconClasses?: string[];
    classes?: string[];
    label?: string;
    tooltip?: string;
    actions: UIActionParams[];
    onChecked?(value: any): any;
}
export interface UIMenuDropdownParams {
    stickyElement: HTMLElement;
    iconClasses?: string[];
    classes?: string[];
    label?: string;
    tooltip?: string;
    keymap?: Keymap;
    menu?: HTMLElement;
}
export declare function createKeymapHTML(config: Keymap): Node[];
export declare class UIKit {
    static button(params: UIButtonParams): UIButton;
    static dropdown(params: UIDropdownParams): UIDropdown;
    static select(params: UISelectParams): UIDropdown;
    static actions(params: UIActionSheetParams): UIDropdown;
    static menu(params: UIMenuParams): UIDropdown;
    static formMenu(params: UIMenuItemParams): UIMenuItem;
    static selectMenu(params: UIMenuSelectParams): {
        label: HTMLElement;
        elementRef: HTMLElement;
        highlight(option: UISelectOption): void;
        disabled: boolean;
    };
    static actionSheetMenu(params: UIMenuActionSheetParams): {
        elementRef: HTMLElement;
        disabled: boolean;
    };
    static dropdownMenu(params: UIMenuDropdownParams): {
        elementRef: HTMLElement;
        disabled: boolean;
    };
}
