import { boldFormatter } from '@textbus/formatters';
import { BlockComponent } from '@textbus/components';
import { FormatMatcher } from './format.matcher';
import { HighlightState } from '../help';
import { BlockMatcher } from './block.matcher';
export class BoldMatcher extends FormatMatcher {
    constructor(excludeComponents = []) {
        super(boldFormatter, excludeComponents);
        this.contextMatcher = new BlockMatcher(BlockComponent, 'h1,h2,h3,h4,h5,h6'.split(','));
    }
    queryState(selection) {
        var _a;
        if (selection.rangeCount === 0) {
            return {
                srcStates: [],
                matchData: null,
                state: HighlightState.Normal
            };
        }
        const result = super.queryState(selection);
        if (result.state !== HighlightState.Normal) {
            return result;
        }
        const contextMatchResult = this.contextMatcher.queryState(selection);
        if (contextMatchResult.state === HighlightState.Highlight &&
            /h[1-6]/i.test((_a = contextMatchResult.matchData) === null || _a === void 0 ? void 0 : _a.tagName)) {
            return Object.assign(Object.assign({}, contextMatchResult), { state: result.state === HighlightState.Normal ? HighlightState.Normal : HighlightState.Highlight });
        }
        return result;
    }
}
//# sourceMappingURL=bold.matcher.js.map