export function rangeContentInComponent(range, componentConstructorList = []) {
    let has = true;
    if (componentConstructorList.length === 0) {
        return false;
    }
    forA: for (const t of componentConstructorList) {
        const scopes = range.getSuccessiveContents();
        for (const scope of scopes) {
            if (!scope.fragment.getContext(t)) {
                has = false;
                break forA;
            }
        }
    }
    return has;
}
//# sourceMappingURL=range-content-in-component.js.map