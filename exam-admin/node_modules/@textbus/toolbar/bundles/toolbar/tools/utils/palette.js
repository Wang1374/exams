import { createPicker } from '@tanbo/color-picker';
import { hsl2Hex, parseCss, rgb2Hex } from '@tanbo/color';
import { Subject } from 'rxjs';
export class Palette {
    constructor(styleName, btnText, colors) {
        var _a;
        this.styleName = styleName;
        this.elementRef = document.createElement('div');
        this.completeEvent = new Subject();
        this.elementRef.classList.add('textbus-toolbar-palette');
        this.onComplete = this.completeEvent.asObservable();
        this.picker = createPicker(this.elementRef, {
            btnText,
            colors: colors || (((_a = Palette.defaultColors) === null || _a === void 0 ? void 0 : _a.length) ? Palette.defaultColors : null)
        });
        this.picker.onSelected = (ev) => {
            if (!ev.rgba) {
                this.completeEvent.next(null);
            }
            else if (ev.rgba.a === 1) {
                this.completeEvent.next(ev.hex);
            }
            else {
                const { r, g, b, a } = ev.rgba;
                this.completeEvent.next(`rgba(${r},${g},${b},${a})`);
            }
        };
    }
    update(d) {
        const color = d ? (d.styles.get(this.styleName) + '') : '#f00';
        if (/^#/.test(color)) {
            this.picker.hex = color;
        }
        else if (/^rgba/.test(color)) {
            this.picker.rgba = parseCss(color);
        }
        else if (/^rgb/.test(color)) {
            this.picker.hex = rgb2Hex(parseCss(color));
        }
        else if (/^hsl/.test(color)) {
            this.picker.hex = hsl2Hex(parseCss(color));
        }
    }
}
Palette.defaultColors = ['#f8f8f9', '#e9eaec', '#dddee1', '#bbbec4', '#80848f', '#495060', '#1c2838', '#e74f5e', '#ff9900', '#15bd9a', '#6ad1ec', '#1296db'];
//# sourceMappingURL=palette.js.map