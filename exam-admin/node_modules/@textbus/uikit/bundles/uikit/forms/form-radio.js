export class FormRadio {
    constructor(config) {
        this.config = config;
        this.elementRef = document.createElement('div');
        this.name = config.name;
        this.elementRef.classList.add('textbus-form-group');
        this.elementRef.innerHTML = `
    <div class="textbus-control-label">${config.label}</div>
    <div class="textbus-control-static">
    <div>${config.values.map(c => {
            return `<label>
                  <input type="radio" ${c.default ? 'checked="checked"' : ''} name="${config.name}" value="${c.value}">
                  ${c.label}
                 </label>`;
        }).join('')}</div>
    <div class="textbus-control-feedback-invalid"></div>
    </div>
    `;
        this.inputs = Array.from(this.elementRef.querySelectorAll('input'));
        this.feedbackEle = this.elementRef.querySelector('.textbus-control-feedback-invalid');
    }
    reset() {
        const values = this.config.values;
        for (let i = 0; i < values.length; i++) {
            this.inputs[i].checked = values[i].default;
        }
    }
    update(value) {
        const values = this.config.values;
        let isMatch = false;
        for (let i = 0; i < values.length; i++) {
            if (values[i].value === value) {
                this.inputs[i].checked = true;
                isMatch = true;
                break;
            }
            else {
                this.inputs[i].checked = true;
            }
        }
        if (!isMatch) {
            this.config.values.forEach((item, i) => {
                if (item.default) {
                    this.inputs[i].checked = true;
                }
            });
        }
    }
    getAttr() {
        const inputs = this.inputs;
        let value;
        for (let i = 0; i < inputs.length; i++) {
            if (inputs[i].checked) {
                value = this.config.values[i].value;
                break;
            }
        }
        return {
            name: this.config.name,
            value
        };
    }
    validate() {
        var _a, _b;
        const feedback = (_b = (_a = this.config).validateFn) === null || _b === void 0 ? void 0 : _b.call(_a, this.getAttr().value);
        this.feedbackEle.innerText = feedback || '';
        return !feedback;
    }
}
//# sourceMappingURL=form-radio.js.map