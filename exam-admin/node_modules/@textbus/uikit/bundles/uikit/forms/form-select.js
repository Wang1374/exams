export class FormSelect {
    constructor(config) {
        this.config = config;
        this.elementRef = document.createElement('div');
        this.name = config.name;
        this.elementRef.classList.add('textbus-form-group');
        this.elementRef.innerHTML = `
    <div class="textbus-control-label">${config.label}</div>
    <div class="textbus-control-value">
       <select class="textbus-form-control" name="${config.name}">${config.options.map(option => {
            return `<option ${option.selected ? 'selected' : ''} value="${option.value}">${option.label}</option>`;
        }).join('')}</select>
    </div>
    <div class="textbus-control-feedback-invalid"></div>`;
        this.select = this.elementRef.querySelector('select');
        this.feedbackEle = this.elementRef.querySelector('.textbus-control-feedback-invalid');
    }
    reset() {
        let value = undefined;
        this.config.options.forEach(option => {
            if (option.selected) {
                value = option.value;
            }
        });
        this.update(value);
    }
    update(value) {
        this.config.options.forEach((option, index) => {
            this.select.options.item(index).selected = option.value === value;
        });
    }
    getAttr() {
        return {
            name: this.config.name,
            value: this.select.value
        };
    }
    validate() {
        var _a, _b;
        const feedback = (_b = (_a = this.config).validateFn) === null || _b === void 0 ? void 0 : _b.call(_a, this.getAttr().value);
        this.feedbackEle.innerText = feedback || '';
        return !feedback;
    }
}
//# sourceMappingURL=form-select.js.map