import { Observable } from 'rxjs';
import { Renderer, TBSelection } from './core/_api';
import { EditorOptions } from './editor-options';
import { RootComponent } from './root-component';
import { EditorController } from './editor-controller';
/**
 * 记录选区路径数据。
 */
export interface RangePath {
    startPaths: number[];
    endPaths: number[];
}
export interface Snapshot {
    component: RootComponent;
    paths: RangePath[];
}
/**
 * TextBus 历史记录管理类
 */
export declare class TBHistory {
    private options;
    private selection;
    private context;
    private renderer;
    private editorController;
    private rootComponent;
    /** 当历史记录变化时触发 */
    onChange: Observable<void>;
    /** 当历史记录快照被应用时触发 */
    onUsed: Observable<void>;
    /** 是否可返回上一次历史记录 */
    get canBack(): boolean;
    /** 是否可重做 */
    get canForward(): boolean;
    private snapshotSubscription;
    private stateChangeSubscription;
    private historySequence;
    private historyIndex;
    private historyStackSize;
    private historyChangeEvent;
    private historyUsedEvent;
    constructor(options: EditorOptions, selection: TBSelection, context: Document, renderer: Renderer, editorController: EditorController, rootComponent: RootComponent);
    /**
     * 应用前一次历史记录
     */
    back(): void;
    /**
     * 重做
     */
    forward(): void;
    /**
     * 销毁当前历史记录
     */
    destroy(): void;
    /**
     * 清除历史记录
     */
    clean(): void;
    /**
     * 开始记录历史
     */
    record(): void;
    private stopListen;
    private listen;
    private recordSnapshot;
    private static cloneHistoryData;
    /**
     * 获取当前 Selection 所有 Range 的 path
     */
    private getRangePaths;
    /**
     * 将一组路径应用到当前 Selection
     * @param paths
     * @param fragment
     */
    private usePaths;
}
